heat_template_version: 2016-10-14

description: >
  My template
parameters:

  # GENERIC
  
  image_name:
    type: string
    label: Image
    description: OS image to use
    default: centos
    
  key_name:
    type: string
    label: SSHkey
    description: SSH key to push in vms
    default: mykey
    
  volume_size:
    type: number
    label: Volume size
    description: Generic VMs volume size
    default: 20
    
  tenant_network:
    type: string
    label: Tenant network
    description: Tenant network name
    
  external_network:
    type: string
    label: External network
    description: External network name
    
  # IPA Specific
  
  IPA_flavor:
    type: string
    label: IPA Server Flavor
    description: Flavor for ipa server
    default: m1.small

  # A Server Specific
  
  A_flavor:
    type: string
    label: A Server Flavor
    description: Flavor for A server
    default: m1.small

  # B Server Specific

  B_flavor:
    type: string
    label: B Server Flavor
    description: Flavor for B server
    default: m1.small

  # AWX Server Specific

  AWX_flavor:
    type: string
    label: Awx Flavor
    description: Flavor for AWX server
    default: m1.small
    
resources:

# IPA RESOURCES

  IPA_srv:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: IPA_flavor }
      name: srvIPA
      image: { get_param: image_name }
      key_name: { get_param: key_name }
      networks:
        - network: private_network

# A SERVER RESOURCES
      
  A_srv:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: A_flavor }
      name: srvA
      image: { get_param: image_name }
      key_name: { get_param: key_name }
      networks:
        - network: private_network

# B SERVER RESOURCES
  
  B_srv:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: B_flavor }
      name: srvB
      image: { get_param: image_name }
      key_name: { get_param: key_name }
      networks:
        - network: private_network

# AWX SERVER RESOURCES

  awx_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: tenant_network }
#      fixed_ips:
#        - ip_address:
#      security_groups:
#        - { get_resource: proxy_sg }
#        - { get_resource: vrrp_sg }
    
  AWX_floating:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: external_network }
      port_id: { get_resource: awx_port }
      
  AWX_srv:
    type: OS::Nova::Server
    properties:
      flavor: { get_param: AWX_flavor }
      name: srvAWX
      image: { get_param: image_name }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: awx_port }